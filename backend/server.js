require("dotenv").config();
const express = require("express");
const cors = require("cors");
const path = require("path");
const connectToMongo = require("./db");
const placesRoutes = require("./routes/places"); // —ñ–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç—ñ–≤
const authRoutes = require('./routes/auth');

const app = express();
app.use(cors());
app.use(express.json());

// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç—ñ–≤
app.use("/api/places", placesRoutes);
app.use('/api/users', authRoutes);
app.use('/api/auth', authRoutes);

const fs = require("fs");
const uploadDir = path.join(__dirname, "uploads");

if (!fs.existsSync(uploadDir)) {
  fs.mkdirSync(uploadDir);
}

app.use("/uploads", express.static(path.join(__dirname, "uploads")));

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –ø—ñ—Å–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
connectToMongo()
  .then(() => {
    app.listen(3000, () => {
      console.log("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:3000");
    });
  })
  .catch((err) => {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB:", err);
  });
